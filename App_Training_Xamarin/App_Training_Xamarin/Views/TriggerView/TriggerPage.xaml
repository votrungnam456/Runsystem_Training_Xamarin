<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="App_Training_Xamarin.Views.TriggerView.TriggerPage"
             xmlns:local="clr-namespace:App_Training_Xamarin.Views.TriggerView">
    <ContentPage.Resources>
        <ResourceDictionary>
            <local:MultiTriggerConverter x:Key="dataHasBeenEntered" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <ScrollView>
            <StackLayout>
                <StackLayout.Triggers></StackLayout.Triggers>
                <Label x:Name="lableUsingPropertyTrigger"
                    HorizontalTextAlignment="Center" 
                    VerticalOptions="Center" 
                    Text="Property Trigger !"
                       FontSize="50">
                    <Label.Triggers>
                        <Trigger TargetType="Label" Property="Text" Value="AAAAA">
                            <Setter Property="BackgroundColor" Value="Aqua"/>
                            <Setter Property="TextColor" Value="Tomato"/>
                        </Trigger>
                        <Trigger TargetType="Label" Property="Text" Value="Property Trigger !">
                            <Setter Property="BackgroundColor" Value="Tomato"/>
                            <Setter Property="TextColor" Value="Aqua"/>
                        </Trigger>
                    </Label.Triggers>
                </Label>
                <Button VerticalOptions="Center" Clicked="Button_Clicked" Text="Change text label and check trigger"></Button>
                <Entry Text="" x:Name="entryDataTrigger"  Placeholder="press here to check data trigger" />
                <Label  HorizontalTextAlignment="Center" VerticalOptions="Center" 
                    Text="If this Entry's length equals 0 button will disable and this label will disappear when length equals 10">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label"
                             Binding="{Binding Source={x:Reference entryDataTrigger}, Path=Text.Length}" Value="10">
                            <Setter Property="IsVisible" Value="False" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
                <Button x:Name="button" Text="Save" FontSize="Large" HorizontalOptions="Center">
                    <Button.Triggers>
                        <DataTrigger TargetType="Button"
                            Binding="{Binding Source={x:Reference entryDataTrigger}, Path=Text.Length}" Value="0">
                        <Setter Property="IsEnabled" Value="False" />
                    </DataTrigger>
                    </Button.Triggers>
                </Button>
                <Label Text="Event Trigger"  HorizontalTextAlignment="Center" 
                    VerticalOptions="Center" FontSize="50"/>
                <Label Text="If in entry is number text color will be red, otherwise is green"  HorizontalTextAlignment="Center" 
                    VerticalOptions="Center"/>
                <Entry>
                    <Entry.Triggers>
                        <EventTrigger Event="TextChanged">
                            <local:NumericValidationTriggerAction/>
                        </EventTrigger>
                    </Entry.Triggers>
                </Entry>
                <Label Text="MuiltiTrigger"  HorizontalTextAlignment="Center" 
                    VerticalOptions="Center" FontSize="50"/>
                <Entry x:Name="user" Placeholder="Username" Text=""/>
                <Entry x:Name="pass" Placeholder="Password" Text=""/>
                <Button Text="Button login muiltiTrigger in xaml">
                    <Button.Triggers>
                        <MultiTrigger TargetType="Button">
                            <MultiTrigger.Conditions>
                                <BindingCondition Binding="{Binding Source={x:Reference user}, Path=Text.Length}" Value="0" />
                                <BindingCondition Binding="{Binding Source={x:Reference pass}, Path=Text.Length}" Value="0" />
                            </MultiTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="False" />
                        </MultiTrigger>
                    </Button.Triggers>
                </Button>
                <Button x:Name="loginButton" Text="Button login muiltiTrigger in C#"
                        FontSize="Large"
                        HorizontalOptions="Center"
                        IsEnabled="false">
                    <Button.Triggers>
                        <MultiTrigger TargetType="Button">
                            <MultiTrigger.Conditions>
                                <BindingCondition Binding="{Binding Source={x:Reference user},
                                  Path=Text.Length,
                                  Converter={StaticResource dataHasBeenEntered}}"
                              Value="true" />
                                <BindingCondition Binding="{Binding Source={x:Reference pass},
                                  Path=Text.Length,
                                  Converter={StaticResource dataHasBeenEntered}}"
                              Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True" />
                        </MultiTrigger>
                    </Button.Triggers>
                </Button>
                <Label Text="EnterActions and ExitActions"  HorizontalTextAlignment="Center" 
                    VerticalOptions="Center" FontSize="50"/>
                <Entry Placeholder="enter job title">
                    <Entry.Triggers>
                        <Trigger TargetType="Entry"
                     Property="Entry.IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <local:FadeTriggerAction StartsFrom="0" />
                            </Trigger.EnterActions>
                            <Setter Property="TextColor" Value="Red"></Setter>
                            <Trigger.ExitActions>
                                <local:FadeTriggerAction StartsFrom="1" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </Entry.Triggers>
                </Entry>
            </StackLayout>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>